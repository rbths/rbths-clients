// yarn run proto-loader-gen-types --keepCase --longs=String --enums=String --defaults --oneofs --grpcLib=@grpc/grpc-js --outDir=src/log-rpc/types/ protos/logindexer.proto
syntax = "proto3";

package logindexer;

message LogEntryField {
    string key = 1;
    string value = 2;
}
message Timestamp {
    uint32 sec = 1;
    uint32 us = 2;
}
message LogEntry {
    string hostname = 1;
    Timestamp timestamp = 2;
    string msg = 3;
    string unit = 4;
    string service_name = 5;
    int32 id = 6;
    repeated LogEntryField additional_fields = 1000;
}

message LogRange {
    Timestamp start = 1;
    Timestamp end = 2;
}

message FieldRange {
    int64 min = 1;
    int64 max = 2;
}

message TimeSeries {
    string name = 1;
    repeated TimeDistribution time_distribution = 2;
}
message LogSearchResult {
    repeated LogEntry log = 1;
    LogRange searched_range = 2;
    LogRange returned_range = 3;
    string search_id = 4;
    int32 total_counts = 5;
    repeated TimeSeries time_series = 6;
}

message DistinctValueCount {
    string value = 1;
    int32 count = 2;
}

enum SubOps {
    AND = 0;
    OR = 1;
    NOT = 2;
}
message TimeDistribution {
    int32 sec = 1;
    int32 count = 2;
}

message FieldStatement {
    string key = 1;
    repeated string values_in = 3;
    string values_regex = 4;
    bool is_null = 5;
    bool is_not_null = 6;
    optional int64 greater = 7;
}

message SubStatement {
    repeated ConditionStatement sub_statements = 1;
    SubOps sub_op = 2;
}

message ConditionStatement {
    SubStatement sub_statement = 1;
    FieldStatement field_statement = 3;
}

message SearchQuery {
    LogRange range = 1;
    int64 search_limit = 2;
    int64 return_limit = 3;
    // ignored for log_indexer, only for central
    string hostname_regex = 6;
    ConditionStatement conditions = 7;
    int32 timeout_ms = 8;
    string search_id = 9;
    int32 return_offset = 10;
}

message FieldInfo {
    string key = 1;
    int32 total_count = 2;
    repeated DistinctValueCount values = 3;
    FieldRange ranges = 4;
}

message LogGroupResult {
    repeated FieldInfo field_infos = 1;
    LogSearchResult search_result = 4;
    int32 total_count = 5;
}

message HostInfo {
    string hostname = 1;
    string nodekey = 2;
    repeated string ts_ips = 3;
    bool is_online = 4;
    Timestamp last_seen = 10;
}

message ListHostsResult {
    repeated HostInfo hosts = 1;
}

message Void {
}

message HealthCheckResult {
    Timestamp localtime = 1;
}

service LogIndexer {
    rpc searchLogs(SearchQuery) returns (LogSearchResult) {}
    rpc searchAndGroup(SearchQuery) returns (LogGroupResult) {}
    rpc tailLogs(SearchQuery) returns (stream LogEntry) {}
    rpc listHosts(Void) returns (ListHostsResult) {}
    rpc healthCheck(Void) returns (HealthCheckResult) {}
}